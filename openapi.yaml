openapi: 3.0.0
info:
  version: 1.0.0
  title: '@viotemplate/server API'
  description: 'The @viotemplate/server API spec.'
  termsOfService: https://template.viotech.io
  contact:
    name: Otávio Araújo
    url: https://github.com/otaviotech
    email: ot@viotech.io
  license:
    name: MIT
    url: https://github.com/otaviotech/ts-monorepo/blob/main/LICENSE

servers:
  - url: https://dev-template.viotech.io/v1
    description: Dev Environment

tags:
  - name: Authentication
    description: Authentication
  - name: Profile
    description: Profile

paths:
  /auth/signup:
    post:
      tags:
        - Authentication
      summary: Create an account
      description: Creates an account.
      operationId: signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email that will be used to login.
                  example: johndoe@email.com
                password:
                  type: string
                  description: The password that will be used to login.
                  example: strongpassword!
                username:
                  type: string
                  description: This will be the username associated to the profile.
                  example: jdoe
              required: [email, password, username]

      responses:
        201:
          description: Account created successfuly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: The id of the created account.
                    example: 1
        400:
          description: Sent data was invalid in some way.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the error.
                        example: RequestValidationError
                      message:
                        type: string
                        description: The details of the error.
                        example: Field email must be a valid email address.
        500:
          description: Something went wrong while handling the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the error.
                        example: InternalError
                      message:
                        type: string
                        description: The details of the error.
                        example: Something went wrong.

  /auth/signin:
    post:
      tags:
        - Authentication
      summary: Sign in
      description: Signin a user.
      operationId: signin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: The email or username from profile or user.
                password:
                  type: string
                  description: The user's password.
              required: [identifier, password]
            examples:
              with_email:
                value:
                  identifier: johndoe@email.com
                  password: strongpassword!
              with_username:
                value:
                  identifier: jdoe
                  password: strongpassword!

      responses:
        200:
          description: Account created successfuly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: The response body.
                    properties:
                      jwt:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        400:
          $ref: '#/definitions/InvalidCredentialsErrorResponse'

        500:
          $ref: '#/definitions/InternalErrorResponse'

  /auth/signout:
    post:
      tags:
        - Authentication
      summary: Signout
      description: Signout a user.
      operationId: signout
      responses:
        200:
          description: Signout successul. The auth token should not work anymore.

        400:
          $ref: '#/definitions/InvalidCredentialsErrorResponse'

        500:
          $ref: '#/definitions/InternalErrorResponse'

  /profile/{profileId}/follow:
    post:
      tags:
        - Profile
      summary: Follow a profile
      description: Start following a profile.
      operationId: follow
      parameters:
        - name: profileId
          in: path
          description: The id of the profile that is going to be followed
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                followerProfileId:
                  type: integer
                  description: The id of the profile that is going to be the follower. This is necessary because users can have many profiles.
                  required: true
                  example: 2
      responses:
        200:
          description: Follow request created successfuly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: The response body.
                    properties:
                      status:
                        type: string
                        example: PENDING
              examples:
                follow_public_profile:
                  value:
                    status: CONFIRMED
                follow_private_profile:
                  value:
                    status: PENDING
        400:
          $ref: '#/definitions/InvalidCredentialsErrorResponse'
        404:
          $ref: '#/definitions/ResourceNotFoundErrorResponse'
        500:
          $ref: '#/definitions/InternalErrorResponse'

definitions:
  InternalErrorResponse:
    description: Something went wrong while handling the request.
    content:
      application/json:
        schema:
          type: object
          properties:
            error:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the error.
                  example: InternalError
                message:
                  type: string
                  description: The details of the error.
                  example: Something went wrong.

  InvalidCredentialsErrorResponse:
    description: Sent credentials are invalid. Maybe your auth token is already expired.
    content:
      application/json:
        schema:
          type: object
          properties:
            error:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the error.
                  example: InvalidCredentialsError
  ResourceNotFoundErrorResponse:
    description: Resource not found.
    content:
      application/json:
        schema:
          type: object
          properties:
            error:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the error.
                  example: ResourceNotFoundError
